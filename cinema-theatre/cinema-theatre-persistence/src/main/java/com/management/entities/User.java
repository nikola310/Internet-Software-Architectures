package com.management.entities;
// Generated Mar 4, 2018 4:33:07 PM by Hibernate Tools 5.2.3.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * @author Zivko Stanisic
 * User generated by hbm2java
 */
@SuppressWarnings("serial")
@Entity
@Table(name = "user", catalog = "isa")
public class User implements java.io.Serializable {

	private int userId;
	private String userEmail;
	private String userName;
	private String userSurname;
	private String userPassword;
	private String userCity;
	private boolean userActive;
	private Date userCreationDate;
	private char userAdmin;
	private String userStateid;
	private Integer userPhone;
	private Integer userRank;
	@SuppressWarnings("rawtypes")
	private Set histories = new HashSet(0);
	@SuppressWarnings("rawtypes")
	private Set friendslistsForUseUserId2 = new HashSet(0);
	@SuppressWarnings("rawtypes")
	private Set propses = new HashSet(0);
	@SuppressWarnings("rawtypes")
	private Set seats = new HashSet(0);
	@SuppressWarnings("rawtypes")
	private Set friendslistsForUseUserId = new HashSet(0);
	@SuppressWarnings("rawtypes")
	private Set friendslistsForUserId = new HashSet(0);

	public User() {
	}

	public User(int userId, String userEmail, String userName, String userSurname, String userPassword, String userCity,
			boolean userActive, Date userCreationDate, char userAdmin) {
		this.userId = userId;
		this.userEmail = userEmail;
		this.userName = userName;
		this.userSurname = userSurname;
		this.userPassword = userPassword;
		this.userCity = userCity;
		this.userActive = userActive;
		this.userCreationDate = userCreationDate;
		this.userAdmin = userAdmin;
	}

	@SuppressWarnings("rawtypes")
	public User(int userId, String userEmail, String userName, String userSurname, String userPassword, String userCity,
			boolean userActive, Date userCreationDate, char userAdmin, String userStateid, Integer userPhone,
			Integer userRank, Set histories, Set friendslistsForUseUserId2, Set propses, Set seats,
			Set friendslistsForUseUserId, Set friendslistsForUserId) {
		this.userId = userId;
		this.userEmail = userEmail;
		this.userName = userName;
		this.userSurname = userSurname;
		this.userPassword = userPassword;
		this.userCity = userCity;
		this.userActive = userActive;
		this.userCreationDate = userCreationDate;
		this.userAdmin = userAdmin;
		this.userStateid = userStateid;
		this.userPhone = userPhone;
		this.userRank = userRank;
		this.histories = histories;
		this.friendslistsForUseUserId2 = friendslistsForUseUserId2;
		this.propses = propses;
		this.seats = seats;
		this.friendslistsForUseUserId = friendslistsForUseUserId;
		this.friendslistsForUserId = friendslistsForUserId;
	}

	@Id

	@Column(name = "USER_ID", unique = true, nullable = false)
	public int getUserId() {
		return this.userId;
	}

	public void setUserId(int userId) {
		this.userId = userId;
	}

	@Column(name = "USER_EMAIL", nullable = false, length = 50)
	public String getUserEmail() {
		return this.userEmail;
	}

	public void setUserEmail(String userEmail) {
		this.userEmail = userEmail;
	}

	@Column(name = "USER_NAME", nullable = false, length = 50)
	public String getUserName() {
		return this.userName;
	}

	public void setUserName(String userName) {
		this.userName = userName;
	}

	@Column(name = "USER_SURNAME", nullable = false, length = 50)
	public String getUserSurname() {
		return this.userSurname;
	}

	public void setUserSurname(String userSurname) {
		this.userSurname = userSurname;
	}

	@Column(name = "USER_PASSWORD", nullable = false, length = 50)
	public String getUserPassword() {
		return this.userPassword;
	}

	public void setUserPassword(String userPassword) {
		this.userPassword = userPassword;
	}

	@Column(name = "USER_CITY", nullable = false, length = 50)
	public String getUserCity() {
		return this.userCity;
	}

	public void setUserCity(String userCity) {
		this.userCity = userCity;
	}

	@Column(name = "USER_ACTIVE", nullable = false)
	public boolean isUserActive() {
		return this.userActive;
	}

	public void setUserActive(boolean userActive) {
		this.userActive = userActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "USER_CREATION_DATE", nullable = false, length = 19)
	public Date getUserCreationDate() {
		return this.userCreationDate;
	}

	public void setUserCreationDate(Date userCreationDate) {
		this.userCreationDate = userCreationDate;
	}

	@Column(name = "USER_ADMIN", nullable = false, length = 1)
	public char getUserAdmin() {
		return this.userAdmin;
	}

	public void setUserAdmin(char userAdmin) {
		this.userAdmin = userAdmin;
	}

	@Column(name = "USER_STATEID", length = 3)
	public String getUserStateid() {
		return this.userStateid;
	}

	public void setUserStateid(String userStateid) {
		this.userStateid = userStateid;
	}

	@Column(name = "USER_PHONE")
	public Integer getUserPhone() {
		return this.userPhone;
	}

	public void setUserPhone(Integer userPhone) {
		this.userPhone = userPhone;
	}

	@Column(name = "USER_RANK")
	public Integer getUserRank() {
		return this.userRank;
	}

	public void setUserRank(Integer userRank) {
		this.userRank = userRank;
	}

	@SuppressWarnings("rawtypes")
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getHistories() {
		return this.histories;
	}

	@SuppressWarnings("rawtypes")
	public void setHistories(Set histories) {
		this.histories = histories;
	}

	@SuppressWarnings("rawtypes")
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUseUserId2")
	public Set getFriendslistsForUseUserId2() {
		return this.friendslistsForUseUserId2;
	}

	@SuppressWarnings("rawtypes")
	public void setFriendslistsForUseUserId2(Set friendslistsForUseUserId2) {
		this.friendslistsForUseUserId2 = friendslistsForUseUserId2;
	}

	@SuppressWarnings("rawtypes")
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getPropses() {
		return this.propses;
	}

	@SuppressWarnings("rawtypes")
	public void setPropses(Set propses) {
		this.propses = propses;
	}

	@SuppressWarnings("rawtypes")
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getSeats() {
		return this.seats;
	}

	@SuppressWarnings("rawtypes")
	public void setSeats(Set seats) {
		this.seats = seats;
	}

	@SuppressWarnings("rawtypes")
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUseUserId")
	public Set getFriendslistsForUseUserId() {
		return this.friendslistsForUseUserId;
	}

	@SuppressWarnings("rawtypes")
	public void setFriendslistsForUseUserId(Set friendslistsForUseUserId) {
		this.friendslistsForUseUserId = friendslistsForUseUserId;
	}

	@SuppressWarnings("rawtypes")
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userByUserId")
	public Set getFriendslistsForUserId() {
		return this.friendslistsForUserId;
	}

	@SuppressWarnings("rawtypes")
	public void setFriendslistsForUserId(Set friendslistsForUserId) {
		this.friendslistsForUserId = friendslistsForUserId;
	}

}
